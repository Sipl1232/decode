
import { useEffect, useRef, useState } from 'react';
import { useNavigate } from "react-router-dom";
import BlurLoader from '../CommonComponents/BlurLoader';
import { AlertBox } from '../CommonComponents/InputBox';

const Base64ToImage = () => {
    const navigate = useNavigate();
    const textareaRef = useRef(null);
    const [isLoading, setIsLoading] = useState(false);
    const [responseValue, setResponseValue] = useState({});
    const [show, setShow] = useState(false)
    const [formData, setFormData] = useState({
        initialValue: '',
    });
    const handleClear = () => {
        setFormData({
            initialValue: '',
        })
        setResponseValue({})
        setShow(false)
    }



   
    const handleSubmit = () => {
        const base64String = formData.initialValue.trim();

        if (!base64String) {
            AlertBox('ERROR', 'Enter Base64 Image!', 'txtValue1');
            return;
        }

        // Directly use the Base64 string as a data URL
        const imageUrl = base64String.startsWith('data:image/')
            ? base64String
            : `data:image/png;base64,${base64String}`;

        const img = new Image();
        img.src = imageUrl;

        img.onload = () => {
            const mimeType = img.src.split(';')[0].split(':')[1];
            const extension = mimeType.split('/')[1];
            const width = img.width;
            const height = img.height;
            const resolution = `${width} x ${height}`;
            const size = (base64String.length * 3 / 4 - base64String.match(/=/g)?.length || 0) / 1024; // Size in KB

            setResponseValue({
                url: imageUrl,
                resolution,
                mimeType,
                extension,
                size: size.toFixed(2),
            });
            setShow(true);
            setIsLoading(false);
        };

        img.onerror = () => {
            console.error('Failed to load image.');
            setIsLoading(false);
        };
    };









    useEffect(() => {
        document.title = 'Base64 To Image'
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [])
    return (
        <>
            <div className='main-card card  border-0'>
                <div className='pt-1 row px-3 border-0'>
                    <div className='card-header '>
                        <h6 >{'Base64 To Image'} </h6>
                    </div>

                    <div className='card-body mt-3 pb-1'>
                        <p style={{ fontSize: '11px' }}>Convert Base64 to image online using a free decoding tool which allows you to decode Base64 as image and preview it directly in the browser.
                            In addition, you will receive some basic information about this image (resolution, MIME type, extension, size).
                            And, of course, you will have a special link to download the image to your device.
                            If you are looking for the reverse process, check Image to Base64.</p>
                        <div className='row'>
                            <div className="fields  ">
                                <label className="form-label">Base64 To Image converter</label>
                                <textarea
                                    id='txtValue1'
                                    rows="3"
                                    type="text"
                                    className="form-control"
                                    placeholder='Type (or Paste) here...'
                                    value={formData.initialValue}
                                    onChange={(e) => {
                                        setFormData({ ...formData, initialValue: e.target.value })
                                    }}
                                />
                            </div>
                            <div className='d-flex align-items-center gap-1 mb-1' style={{ fontSize: '13px' }}>
                                <button type="button"
                                    onClick={handleSubmit}
                                    className="btn btn-rounded btn-secondary">CONVERT</button>
                            </div>

                            {show ? <>
                                <div className="fields">
                                    <div>
                                        <img src={responseValue?.url} alt="Uploaded" />
                                    </div>
                                    {responseValue && (
                                        <div>
                                            <ul>
                                                <li style={{ fontSize: '11px', }}> <b>Resolution:</b> {responseValue.resolution}</li>
                                                <li style={{ fontSize: '11px', }}> <b>MIME Type:</b> {responseValue.mimeType}</li>
                                                <li style={{ fontSize: '11px', }}> <b>Extension:</b> .{responseValue.extension}</li>
                                                <li style={{ fontSize: '11px', }}> <b>Size: </b> {responseValue.size}(KB)</li>

                                            </ul>

                                        </div>
                                    )}
                                </div>
                            </> : <></>}




                            <div className='card-body'>
                                <button type="button" onClick={() => handleClear()} className="btn btn-rounded btn-danger"><span className="text-white me-2">
                                    <i className="fa-solid fa-arrow-rotate-left"></i>
                                </span>Clear</button>
                                {show ? <>  <a href={responseValue.url} download={`image.${responseValue.extension}`}>
                                    <button className="btn btn-rounded btn-primary">Download Image</button>
                                </a></> : <></>}

                            </div>

                        </div>
                    </div>
                </div>
            </div>


            <div className='main-card card  border-0'>
                <div className='card-body mt-3 pb-1'>

                    <div style={{ fontSize: '15px', fontWeight: "600" }}>
                        <i className="fas fa-question-circle me-1"> </i>
                        How to convert Base64 to image online
                    </div>

                    <div style={{ width: "100%", height: "1px", borderBottom: "1px dashed black", marginTop: "5px" }}></div>

                    <ul>
                        <li style={{ fontSize: '12px', marginTop: "8px" }}>Paste your string in the "Base64" field.</li>
                        <li style={{ fontSize: '12px', marginTop: "8px" }}>Press the "CONVERT" button.</li>
                        <li style={{ fontSize: '12px', marginTop: "8px" }}>Click on Download Button to download the image</li>
                    </ul>

                    <div style={{ fontSize: '13px', marginTop: "12px", marginBottom: '12px' }}><i className="fas fa-copyright me-1"></i> @2024<a href=' www.sagarinfotech.com'> www.sagarinfotech.com</a></div>
                    <div className='card-body'>
                        <button type="button"
                            onClick={() => {
                                navigate('/PrivacyPolicy')
                            }}
                            className=" btn-rounded btn btn-info">
                            <span className=" text-white me-2">
                                <i className="fas fa-lock"></i>
                            </span>Privacy policy</button>
                        <button type="button" onClick={() => {

                        }} className=" btn-rounded btn btn-info"><span className="text-white me-2">
                                <i className="fas fa-at"></i>
                            </span>Contact us
                        </button>
                    </div>
                    <p style={{ fontSize: '12px', marginTop: "8px" }}>This website uses cookies. We use cookies to personalise content/ads and to analyse our traffic.</p>
                </div>
            </div>
            {isLoading && <BlurLoader />}
        </>
    )
}
export default Base64ToImage;

